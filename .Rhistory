usethis::use_gpl3_license()
use_readme_md()
library(usethis)
library(devtools)
use_readme_md()
use_gpl3_license()
use_gpl3_license("Yuanlong Hu")
load("./data/Demo_NPherb.rda")
target <- Demo_NPherb$Drug_Target
target <- target[,c(1,2)]
target <- c("c1", "c2")
disease <- unique(Demo_NPherb$Disease_Network$from,Demo_NPherb$Disease_Network$to)
disease <- data.frame(c1 = rep("disease", length(disease)),c2 = disease)
target <- merge(disease,target, by = "c1")
target <- Demo_NPherb$Drug_Target
target <- target[,c(1,2)]
colnames(target) <- c("c1", "c2")
View(target)
View(disease)
target <- rbind(disease,target)
View(target)
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset0,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- as.data.frame(enrich_drug)
fingerprint_drug <- data.frame(feature= names(geneset0), var = ifelse(names(geneset0) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
}
load("./data/sysdata.rda")
geneset0 <- biomarker$mark_df_top150
target1 <- target[target$c1 %in% c("disease", "半夏泻心汤", "资生汤"),]
tapply(target1$c1, target1$c2, function(x){
enrich_f(x, geneset0)
})
tapply(target1$c2, target1$c1, function(x){
enrich_f(x, geneset0)
})
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- as.data.frame(enrich_drug)
fingerprint_drug <- data.frame(feature= names(geneset), var = ifelse(names(geneset) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
}
View(target1)
tapply(target1$c2, target1$c1, function(x){
enrich_f(x, geneset0)
})
x
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- clusterProfiler::as.data.frame(enrich_drug)
fingerprint_drug <- data.frame(feature= names(geneset), var = ifelse(names(geneset) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
}
tapply(target1$c2, target1$c1, function(x){
enrich_f(x, geneset0)
})
library(clusterProfiler)
enrich_f(target1$c2[target1$c1 == "disease"])
enrich_drug <- clusterProfiler::enricher(target1$c2[target1$c1 == "disease"],
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- clusterProfiler::enricher(target1$c2[target1$c1 == "disease"],
TERM2GENE = geneset0,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- as.data.frame(enrich_drug)
enrich_drug <- clusterProfiler::enricher(target1$c2[target1$c1 == "disease"],
TERM2GENE = geneset0,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
DT::datatable(enrich_drug)
fingerprint_drug <- data.frame(feature= names(geneset), var = ifelse(names(geneset) %in% enrich_drug$ID, 1, 0))
fingerprint_drug <- data.frame(feature= names(geneset0), var = ifelse(names(geneset0) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
fingerprint_drug
fingerprint_drug <- data.frame(feature= unique(geneset0$biomarker), var = ifelse(names(geneset0) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
fingerprint_drug
fingerprint_drug <- data.frame(feature= unique(geneset0$biomarker), var = ifelse(unique(geneset0$biomarker) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
fingerprint_drug
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue <0.2,]
DT::datatable(enrich_drug)
fingerprint_drug <- data.frame(feature= unique(geneset0$biomarker), var = ifelse(unique(geneset0$biomarker) %in% enrich_drug$ID, 1, 0))
DT::datatable(fingerprint_drug)
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue<0.2,]
fingerprint_drug <- data.frame(feature= unique(geneset), var = ifelse(unique(geneset) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
}
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
enrich_f(target1$c2[target1$c1 == "disease"])
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue<0.2,]
fingerprint_drug <- data.frame(feature= unique(geneset), var = ifelse(unique(geneset) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
return(fingerprint_drug)
}
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
enrich_f <- function(target_character, geneset = geneset0){
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue<0.2,]
fingerprint_drug <- data.frame(feature = unique(geneset$c1), var = ifelse(unique(geneset$c1) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
return(fingerprint_drug)
}
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
enrich_f <- function(target_character, geneset = geneset0){
names(geneset) <- c("c1", "c2")
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue<0.2,]
fingerprint_drug <- data.frame(feature = unique(geneset$c1), var = ifelse(unique(geneset$c1) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
return(fingerprint_drug)
}
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
res_enrich0 <- enrich_f(target1$c2[target1$c1 == "disease"])
names(res_enrich0) <- c("feature", "disease")
head(res_enrich0)
DT::datatable(res_enrich0)
for (i in unique(target1$c1[target1$c1 != "disease"])) {
res_enrich <- enrich_f(target1$c2[target1$c1 == i])
names(res_enrich) <- c("feature", i)
res_enrich0 <- merge(res_enrich0, res_enrich)
}
DT::datatable(res_enrich0)
rownames(res_enrich0) <- res_enrich0$feature
res_enrich0 <- res_enrich0[,-1]
res_enrich0 <- t(res_enrich0)
res_Tanimoto <- 1 - distance(as.matrix(res_enrich0), method="jaccard")
library(philentropy)
res_Tanimoto <- 1 - philentropy::distance(as.matrix(res_enrich0), method="jaccard")
rownames(res_Tanimoto) <- rownames(res_enrich0)
colnames(res_Tanimoto) <- rownames(res_enrich0)
res_Tanimoto <- reshape2::melt(res_Tanimoto,value.name = "Tanimoto")
res_Tanimoto <- res_Tanimoto[res_Tanimoto$Var1 == "disease" & res_Tanimoto$Var2 != "disease",]
names(res_Tanimoto) <- c("Drug", "Tanimoto")
DT::datatable(enrich_f(target1$c2[target1$c1 == "disease"]))
DT::datatable(res_Tanimoto)
res_Tanimoto <- 1 - philentropy::distance(as.matrix(res_enrich0), method="jaccard")
rownames(res_Tanimoto) <- rownames(res_enrich0)
colnames(res_Tanimoto) <- rownames(res_enrich0)
res_Tanimoto
res_Tanimoto <- reshape2::melt(res_Tanimoto, value.name = "Tanimoto")
res_Tanimoto
res_Tanimoto <- res_Tanimoto[res_Tanimoto$Var1 == "disease" & res_Tanimoto$Var2 != "disease",]
res_Tanimoto
res_Tanimoto <- res_Tanimoto[,c(2,3)]
names(res_Tanimoto) <- c("Drug", "Tanimoto")
DT::datatable(res_Tanimoto)
DT::datatable(res_enrich0)
res_enrich0 <- enrich_f(target1$c2[target1$c1 == "disease"])
names(res_enrich0) <- c("feature", "disease")
for (i in unique(target1$c1[target1$c1 != "disease"])) {
res_enrich <- enrich_f(target1$c2[target1$c1 == i])
names(res_enrich) <- c("feature", i)
res_enrich0 <- merge(res_enrich0, res_enrich)
}
rownames(res_enrich0) <- res_enrich0$feature
res_enrich0 <- res_enrich0[,-1]
DT::datatable(res_enrich0)
res_Tanimoto_f2 <- replicate(1000,Tanimoto_f(f = data.frame(disease = sample(res_enrich0$disease), res_enrich0[,c(1:ncol(res_enrich0))]
)
)
)
Tanimoto_f <- function(f = res_enrich0){
f <- t(f)
res_Tanimoto <- 1 - philentropy::distance(as.matrix(f), method="jaccard")
rownames(res_Tanimoto) <- rownames(f)
colnames(res_Tanimoto) <- rownames(f)
res_Tanimoto <- reshape2::melt(res_Tanimoto,value.name = "Tanimoto")
res_Tanimoto <- res_Tanimoto[res_Tanimoto$Var1 == "disease" & res_Tanimoto$Var2 != "disease",]
res_Tanimoto <- res_Tanimoto[,c(2,3)]
names(res_Tanimoto) <- c("Drug", "Tanimoto")
return(res_Tanimoto)
}
res_Tanimoto_f2 <- replicate(1000,Tanimoto_f(f = data.frame(disease = sample(res_enrich0$disease), res_enrich0[,c(1:ncol(res_enrich0))]
)
)
)
res_Tanimoto_f2
DT::datatable(res_Tanimoto_f2)
res_Tanimoto_f2 <- replicate(1000,Tanimoto_f(f = data.frame(disease = sample(res_enrich0$disease), res_enrich0[,c(2:ncol(res_enrich0))]
)
)
)
DT::datatable(res_Tanimoto_f2)
View(res_Tanimoto)
class(T)
load_all()
load_all()
load_all()
score_immpc_res <- score_immpc(disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)),
disease_network= Demo_NPherb$Disease_Network,
target = target1,
geneset = biomarker$mark_df_top150)
load_all()
score_immpc_res <- score_immpc(disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)),
disease_network= Demo_NPherb$Disease_Network,
target = target1,
geneset = biomarker$mark_df_top150)
load_all()
score_immpc_res <- score_immpc(disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)),
disease_network= Demo_NPherb$Disease_Network,
target = target1,
geneset = biomarker$mark_df_top150)
unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to))
str(Demo_NPherb$Disease_Network)
target1
score_immpc_res <- score_immpc(disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)),
disease_network= Demo_NPherb$Disease_Network,
target = target1[target1$c1 != "disease",],
geneset = biomarker$mark_df_top150)
disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to))
disease_network= Demo_NPherb$Disease_Network
target = target1[target1$c1 != "disease",]
geneset = biomarker$mark_df_top150
target <- target[,c(1,2)]
names(target) <- c("c1", "c2")
disease <- data.frame(c1 = rep("disease", length(disease_biomarker)),c2 = disease_biomarker)
enrich_f <- function(target_character, geneset = geneset0){
names(geneset) <- c("c1", "c2")
enrich_drug <- clusterProfiler::enricher(target_character,
TERM2GENE = geneset,
minGSSize = 2,maxGSSize = Inf,
pvalueCutoff = 0.05,
qvalueCutoff = 0.2)
enrich_drug <- enrich_drug@result
enrich_drug <- enrich_drug[enrich_drug$pvalue<0.05 & enrich_drug$qvalue<0.2,]
fingerprint_drug <- data.frame(feature = unique(geneset$c1), var = ifelse(unique(geneset$c1) %in% enrich_drug$ID, 1, 0))
names(fingerprint_drug) <- c("feature","drug")
return(fingerprint_drug)
}
res_enrich0 <- enrich_f(disease$c2)
names(res_enrich0) <- c("feature", "disease")
for (i in unique(target$c1)) {
res_enrich <- enrich_f(target$c2[target$c1 == i])
names(res_enrich) <- c("feature", i)
res_enrich0 <- merge(res_enrich0, res_enrich)
}
rownames(res_enrich0) <- res_enrich0$feature
res_enrich0 <- res_enrich0[,-1]
# target is a data frame; disease is a data frame
Tanimoto_f <- function(f = res_enrich0){
f <- t(f)
res_Tanimoto <- 1 - philentropy::distance(as.matrix(f), method="jaccard")
rownames(res_Tanimoto) <- rownames(f)
colnames(res_Tanimoto) <- rownames(f)
res_Tanimoto <- reshape2::melt(res_Tanimoto,value.name = "Tanimoto")
res_Tanimoto <- res_Tanimoto[res_Tanimoto$Var1 == "disease" & res_Tanimoto$Var2 != "disease",]
res_Tanimoto <- res_Tanimoto[,c(2,3)]
names(res_Tanimoto) <- c("Drug", "Tanimoto")
return(res_Tanimoto)
}
score_change <- function(disease_network = disease_network, target = target){
disease_network <- as.data.frame(disease_network[,1:2])
colnames(disease)<- c("node1","node2")
target <- as.data.frame(target[,1:2])
colnames(target) <- c("herb","target")
degree0 <- NULL
mean_distance0 <- NULL
Total_disturbance_rate0 <- NULL
for (i in unique(target[,1])) {
target_drug <- unique(target$target[target$herb == i])
target_drug <- intersect(target_drug, unique(c(disease$node1,disease$node2)))
disease2 <- disease[!disease$node1 %in% target_drug,]
disease2 <- disease2[!disease2$node2 %in% target_drug,]
g1 <- igraph::graph.data.frame(disease,directed = F)
g2 <- igraph::graph.data.frame(disease2,directed = F)
degree <- (mean(igraph::centr_degree(g2)$res) - mean(igraph::centr_degree(g1)$res))/mean(igraph::centr_degree(g1)$res)
mean_distance <- (igraph::mean_distance(g2, directed = F, unconnected = TRUE) - igraph::mean_distance(g1, directed = F, unconnected = TRUE))/igraph::mean_distance(g1, directed = F, unconnected = TRUE)
Total_disturbance_rate <- mean_distance - degree
names(degree) <- i
names(mean_distance) <- i
names(Total_disturbance_rate) <- i
degree0 <- c(degree0, degree)
mean_distance0 <- c(mean_distance0, mean_distance)
Total_disturbance_rate0 <- c(Total_disturbance_rate0, Total_disturbance_rate)
}
# S4
res_network <- data.frame(Drug = names(degree0),
Degree_disturbance_rate = degree0,
Mean_distance_disturbance_rate = mean_distance0,
Total_disturbance_rate = Total_disturbance_rate0)
return(res_network)
}
res_Tanimoto <- Tanimoto_f(f = res_enrich0)
res_Tanimoto
if(!is.null(disease_network)){
res_network <- score_change(disease_network = disease_network, target = target)
result <- merge(res_Tanimoto, res_network, by = "Drug")
}else{
result <- res_Tanimoto
}
result
head(disease_network)
target
disease_network <- as.data.frame(disease_network[,1:2])
colnames(disease)<- c("node1","node2")
target <- as.data.frame(target[,1:2])
colnames(target) <- c("herb","target")
degree0 <- NULL
mean_distance0 <- NULL
Total_disturbance_rate0 <- NULL
for (i in unique(target[,1])) {
target_drug <- unique(target$target[target$herb == i])
target_drug <- intersect(target_drug, unique(c(disease$node1,disease$node2)))
disease2 <- disease[!disease$node1 %in% target_drug,]
disease2 <- disease2[!disease2$node2 %in% target_drug,]
g1 <- igraph::graph.data.frame(disease,directed = F)
g2 <- igraph::graph.data.frame(disease2,directed = F)
degree <- (mean(igraph::centr_degree(g2)$res) - mean(igraph::centr_degree(g1)$res))/mean(igraph::centr_degree(g1)$res)
mean_distance <- (igraph::mean_distance(g2, directed = F, unconnected = TRUE) - igraph::mean_distance(g1, directed = F, unconnected = TRUE))/igraph::mean_distance(g1, directed = F, unconnected = TRUE)
Total_disturbance_rate <- mean_distance - degree
names(degree) <- i
names(mean_distance) <- i
names(Total_disturbance_rate) <- i
degree0 <- c(degree0, degree)
mean_distance0 <- c(mean_distance0, mean_distance)
Total_disturbance_rate0 <- c(Total_disturbance_rate0, Total_disturbance_rate)
# }
# S4
res_network <- data.frame(Drug = names(degree0),
Degree_disturbance_rate = degree0,
Mean_distance_disturbance_rate = mean_distance0,
Total_disturbance_rate = Total_disturbance_rate0)
return(res_network)
}
disease_network <- as.data.frame(disease_network[,1:2])
colnames(disease)<- c("node1","node2")
target <- as.data.frame(target[,1:2])
colnames(target) <- c("herb","target")
degree0 <- NULL
mean_distance0 <- NULL
Total_disturbance_rate0 <- NULL
for (i in unique(target[,1])) {
target_drug <- unique(target$target[target$herb == i])
target_drug <- intersect(target_drug, unique(c(disease$node1,disease$node2)))
disease2 <- disease[!disease$node1 %in% target_drug,]
disease2 <- disease2[!disease2$node2 %in% target_drug,]
g1 <- igraph::graph.data.frame(disease,directed = F)
g2 <- igraph::graph.data.frame(disease2,directed = F)
degree <- (mean(igraph::centr_degree(g2)$res) - mean(igraph::centr_degree(g1)$res))/mean(igraph::centr_degree(g1)$res)
mean_distance <- (igraph::mean_distance(g2, directed = F, unconnected = TRUE) - igraph::mean_distance(g1, directed = F, unconnected = TRUE))/igraph::mean_distance(g1, directed = F, unconnected = TRUE)
Total_disturbance_rate <- mean_distance - degree
names(degree) <- i
names(mean_distance) <- i
names(Total_disturbance_rate) <- i
degree0 <- c(degree0, degree)
mean_distance0 <- c(mean_distance0, mean_distance)
Total_disturbance_rate0 <- c(Total_disturbance_rate0, Total_disturbance_rate)
}
target
degree0 <- NULL
mean_distance0 <- NULL
Total_disturbance_rate0 <- NULL
load_all()
score_immpc_res <- score_immpc(disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)),
disease_network= Demo_NPherb$Disease_Network,
target = target1[target1$c1 != "disease",],
geneset = biomarker$mark_df_top150)
DT::datatable(score_immpc_res)
DT::datatable(score_immpc_res@ScoreResult)
geneset <- biomarker$mark_df_top150
use_data(geneset,internal = T)
document()
herb <- read.table("herb2.txt",header = T)
head(herb)
herb0 <- NULL
for (i in 1:nrow(herb)) {
herb1 <- herb$target[i]
herb1 <- strsplit(herb1,split = ", ")
herb1 <- data.frame(herb = rep(herb$herb[i], length(herb1)),
target = herb1)
herb0 <- rbind(herb0, herb1)
}
herb0 <- NULL
for (i in 1:nrow(herb)) {
herb1 <- herb$target[i]
herb1 <- strsplit(herb1,split = ", ")
herb1 <- herb1[[1]]
herb1 <- data.frame(herb = rep(herb$herb[i], length(herb1)),
target = herb1)
herb0 <- rbind(herb0, herb1)
}
herb$target[1]
strsplit(herb$target[1],", ")
str_split(herb$target[1],pattern=", ")
library(stringr)
str_split(herb$target[1],pattern=", ")
unlist(str_split(herb$target[1],pattern=", "))
herb0 <- NULL
for (i in 1:nrow(herb)) {
herb1 <- herb$target[i]
herb1 <- unlist(str_split(herb1, pattern = ", "))
herb1 <- data.frame(herb = rep(herb$herb[i], length(herb1)),
target = herb1)
herb0 <- rbind(herb0, herb1)
}
head(herb0)
COVID19 <- list(
herb_target = herb0,
disease_network = Demo_NPherb$Disease_Network,
disease_biomarker = unique(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to)
)
COVID19$disease_biomarker
COVID19 <- list(
herb_target = herb0,
disease_network = Demo_NPherb$Disease_Network,
disease_biomarker = unique(c(Demo_NPherb$Disease_Network$from, Demo_NPherb$Disease_Network$to))
)
COVID19$disease_biomarker
use_data(COVID19)
load_all()
use_package("igraph")
use_package("philentropy")
use_package("reshape2")
use_package("clusterProfiler")
use_package("DOSE")
load_all()
data("COVID19")
result <- score_immpc(disease_biomarker = COVID19$disease_biomarker,
disease_network = COVID19$disease_network,
target = COVID19$herb_target,
geneset = NULL)
load_all()
result <- score_immpc(disease_biomarker = COVID19$disease_biomarker,
disease_network = COVID19$disease_network,
target = COVID19$herb_target,
geneset = NULL)
load("./R/sysdata.rda")
genesetlist <- geneset
use_data("genesetlist",internal = T)
use_data(genesetlist,internal = T)
load_all()
result <- score_immpc(disease_biomarker = COVID19$disease_biomarker,
disease_network = COVID19$disease_network,
target = COVID19$herb_target,
geneset = NULL)
DT::datatable(result@ScoreResult)
DT::datatable(result@Fingerprint)
load_all()
result <- score_immpc(disease_biomarker = COVID19$disease_biomarker,
disease_network = COVID19$disease_network,
target = COVID19$herb_target,
geneset = NULL)
DT::datatable(result@ScoreResult)
DT::datatable(result@Fingerprint)
# define a probability density function P
P <- 1:10/sum(1:10)
# define a probability density function Q
Q <- 20:29/sum(20:29)
# combine P and Q as matrix object
x <- rbind(P,Q)
x
